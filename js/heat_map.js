// Generated by CoffeeScript 1.3.3
(function() {
  var MapData, MapStyle, OsmHeatMap;

  $(document).ready(function() {
    return OsmHeatMap.initialize();
  });

  OsmHeatMap = {
    map: void 0,
    initialize: function() {
      var center_x, center_y;
      this.map = new OpenLayers.Map('map');
      this.map.addLayer(new OpenLayers.Layer.OSM());
      this.add_district_layer();
      this.add_heatmap_layer();
      center_x = $('#map').data('center-x');
      center_y = $('#map').data('center-y');
      return this.map.setCenter(new OpenLayers.LonLat(center_x, center_y), 10);
    },
    add_district_layer: function() {
      var vectorLayer;
      vectorLayer = new OpenLayers.Layer.Vector("Berlin Districts", {
        style: MapStyle.layer_style(),
        renderers: MapStyle.renderer()
      });
      vectorLayer.addFeatures(MapData.district_features());
      return this.map.addLayer(vectorLayer);
    },
    add_heatmap_layer: function() {
      var crime_data, heatmapLayer;
      crime_data = MapData.crime_data();
      heatmapLayer = new OpenLayers.Layer.Heatmap("Heatmap Layer", this.map, crime_data, {
        visible: true,
        radius: 40
      }, {
        isBaseLayer: false,
        opacity: 0.3,
        projection: new OpenLayers.Projection("EPSG:4326")
      });
      return this.map.addLayer(heatmapLayer);
    }
  };

  MapData = {
    district_features: function() {
      var district, districts, features, poly, wkt_parser, wkt_polygon, _i, _len;
      districts = $('#map').data('district');
      wkt_parser = new OpenLayers.Format.WKT();
      features = [];
      for (_i = 0, _len = districts.length; _i < _len; _i++) {
        district = districts[_i];
        poly = district['area'];
        wkt_polygon = wkt_parser.read(poly);
        wkt_polygon.style = MapStyle.style('#0000ff');
        features.push(wkt_polygon);
      }
      return features;
    },
    crime_data: function() {
      var crime, crime_data, crimes, _i, _len;
      crime_data = {
        max: 10,
        data: []
      };
      crimes = $('#map').data('crimes');
      for (_i = 0, _len = crimes.length; _i < _len; _i++) {
        crime = crimes[_i];
        crime_data.data.push({
          lonlat: new OpenLayers.LonLat(crime['lon'], crime['lat'])
        });
      }
      return crime_data;
    }
  };

  MapStyle = {
    renderer: function() {
      var renderer;
      renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
      return renderer = (renderer ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers);
    },
    layer_style: function() {
      var layer_style;
      layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
      layer_style.fillOpacity = 0.3;
      layer_style.graphicOpacity = 1;
      return layer_style;
    },
    style: function(color) {
      var style;
      style = OpenLayers.Util.extend({}, this.layer_style());
      style.strokeColor = color;
      style.fillColor = color;
      return style;
    }
  };

}).call(this);
